volumes:
  pgdata:
  prom_data:
  metabase_data:

services:
  # ─── Prefect Orion ───
  prefect-orion:
    build: infrastructure/prefect/orion
    image: pipedrive-orion:latest
    env_file:
      - .env
    ports:
      - "4200:4200"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
    restart: on-failure

  # ─── Prefect Worker ───
  prefect-worker:
    image: pipedrive-orion:latest  # ou outra imagem com Prefect CLI 3.x
    env_file:
      - .env
    depends_on:
      - prefect-orion
    command: >
      bash -c "
        # Cria o pool (ignora erro se já existir)
        prefect work-pool create --type docker docker-pool || true &&
        # Inicia o worker para esse pool
        prefect worker start --pool docker-pool --log-level INFO
      "
  # ─── Postgres ───
  db:
    image: postgres:14
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5
    restart: on-failure

  # ─── Redis ───
  redis:
    image: redis:7-alpine
    env_file:
      - .env
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: on-failure

  # ─── Pushgateway ───
  pushgateway:
    image: prom/pushgateway:latest
    env_file:
      - .env
    ports:
      - "9091:9091"
    restart: on-failure

  # ─── Prometheus ───
  prometheus:
    image: prom/prometheus:latest
    env_file:
      - .env
    volumes:
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    restart: on-failure

  # ─── Grafana ───
  grafana:
    image: grafana/grafana-oss:latest
    env_file:
      - .env
    ports:
      - "3015:3000"
    restart: on-failure
