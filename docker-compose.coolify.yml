volumes:
  pgdata:
  prom_data:
  metabase_data:

services:
  # ─── Prefect Orion ───
  prefect-orion:
    image: pipedrive-orion:latest
    build: infrastructure/prefect/orion
    env_file:
      - .env
    ports:
      - "4200:4200"
    networks: ["internal"]
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4200/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ─── Prefect Agent ───
  prefect-agent:
    build:
      context: .
      dockerfile: Dockerfile
      target: final
    image: pipedrive-metabase-integration-etl:latest
    env_file:
      - .env
    command: prefect agent start -q docker
    depends_on:
      - prefect-orion
      - db
      - redis
    networks: ["internal"]
    deploy:
      mode: global
      restart_policy:
        condition: on-failure

  # ─── Postgres ───
  db:
    image: postgres:14
    env_file:
      - .env
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks: ["internal"]
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 30s
      timeout: 5s
      retries: 5

  # ─── Redis ───
  redis:
    image: redis:7-alpine
    env_file:
      - .env
    networks: ["internal"]
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3

  # ─── Pushgateway ───
  pushgateway:
    image: prom/pushgateway:latest
    env_file:
      - .env
    ports:
      - "9091:9091"
    networks: ["internal"]

  # ─── Prometheus ───
  prometheus:
    image: prom/prometheus:latest
    env_file:
      - .env
    volumes:
      - prom_data:/prometheus
    ports:
      - "9090:9090"
    networks: ["internal"]

  # ─── Grafana ───
  grafana:
    image: grafana/grafana-oss:latest
    env_file:
      - .env
    ports:
      - "3015:3000"
    networks: ["internal"]
