version: "3.9"

volumes:
  pgdata:
  prom_data:
  metabase_data:

services:
  prefect-orion:
    build:
      context: .
      dockerfile: Dockerfile.orion
    env_file: .env
    environment:
      PREFECT_ORION_DATABASE_CONNECTION_URL: ${DATABASE_URL}
      PREFECT_ORION_DATABASE_MIGRATE_ON_START: "true"
      PREFECT_API_URL: ${PREFECT_PUBLIC_API_URL}
      PREFECT_UI_URL: ${PREFECT_PUBLIC_UI_URL}
      PREFECT_SERVER_API_AUTH_STRING: ${PREFECT_SERVER_API_AUTH_STRING}
      PREFECT_SERVER_API_CSRF_PROTECTION_ENABLED: "true"
      PREFECT_SERVER_API_CSRF_TOKEN_EXPIRATION: ${PREFECT_SERVER_API_CSRF_TOKEN_EXPIRATION}
      APP_ROLE: orion
      AUTO_DEPLOY_ON_START: "true"
      AUTO_CREATE_POOL: "true"
    ports:
      - "44200:4200" 
    restart: on-failure
    healthcheck:
      test:
        [
          "CMD",
          "curl",
          "-f",
          "-u",
          "${PREFECT_HEALTHCHECK_USER}:${PREFECT_HEALTHCHECK_PASSWORD}",
          "http://localhost:4200/api/health"
        ]
      interval: 30s
      timeout: 10s
      retries: 3

  prefect-worker:
    build: infrastructure/prefect/worker
    env_file: .env
    environment:
      PREFECT_API_URL: http://prefect-orion:4200/api
      PREFECT_API_AUTH_STRING: ${PREFECT_SERVER_API_AUTH_STRING}
      PREFECT_CLIENT_CSRF_SUPPORT_ENABLED: "true"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    restart: on-failure
    depends_on:
      prefect-orion:
        condition: service_healthy
    command: >
      bash -c "
        prefect work-pool create --type docker docker-pool --overwrite &&
        prefect worker start --pool docker-pool --type docker
      "

  db:
    image: postgres:14
    env_file: .env
    ports:
      - "15432:5432"  
    volumes:
      - pgdata:/var/lib/postgresql/data
    restart: on-failure
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "$POSTGRES_USER"]
      interval: 30s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    env_file: .env
    expose:
      - "6379"
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 5s
      retries: 3
    restart: on-failure

  pushgateway:
    image: prom/pushgateway:latest
    env_file: .env
    expose:
      - "9091"
    restart: on-failure

  prometheus:
    image: prom/prometheus:latest
    env_file: .env
    volumes:
      - prom_data:/prometheus
    expose:
      - "9090"
    restart: on-failure

  grafana:
    image: grafana/grafana-oss:latest
    env_file: .env
    ports:
      - "34444:3000"  
    restart: on-failure
