---
# --- 1. ConfigMap com prometheus.yml ---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  labels:
    app: prometheus
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s # Intervalo padrão de coleta
      evaluation_interval: 15s

    scrape_configs:
      # Coleta métricas do próprio Prometheus
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']

      - job_name: 'pushgateway'
        honor_labels: true # Importante para manter labels do job que fez o push
        static_configs:
          - targets: ['pushgateway:9091']

      # Coleta métricas de serviços Kubernetes que possuem anotações específicas
      - job_name: 'kubernetes-services'
        kubernetes_sd_configs:
          - role: service # Descobre serviços
        relabel_configs:
          # Seleciona apenas serviços com a anotação prometheus.io/scrape=true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          # (Opcional) Usa a anotação prometheus.io/path se definida, senão usa /metrics
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          # Usa a anotação prometheus.io/port se definida, senão usa a porta do serviço
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: ([^:]+)(?::\d+)?;(\d+)
            replacement: $1:$2
          # Define o label 'job' como o nome do serviço
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: job
          # Define o label 'instance' como o IP:Porta do pod/endpoint
          # (Pode ser mais útil mudar role para 'pod' ou 'endpoints' para ter labels de pod)
          # Para simplificar, vamos manter o serviço por enquanto.
          # - source_labels: [__address__]
          #   action: replace
          #   target_label: instance

---
# --- 2. RBAC: Service Account, ClusterRole, ClusterRoleBinding ---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: prometheus-sa
  labels:
    app: prometheus

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: prometheus-cr
rules:
- apiGroups: [""]
  resources:
  - nodes
  - nodes/metrics
  - services
  - endpoints
  - pods
  verbs: ["get", "list", "watch"]
- apiGroups: ["extensions", "networking.k8s.io"]
  resources:
  - ingresses
  verbs: ["get", "list", "watch"]
- nonResourceURLs: ["/metrics"]
  verbs: ["get"]

---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: prometheus-crb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: prometheus-cr
subjects:
- kind: ServiceAccount
  name: prometheus-sa
  namespace: default

---
# --- 3. PersistentVolumeClaim ---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: prometheus-pvc
  labels:
    app: prometheus
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 8Gi 
      memory: "1Gi"  
      cpu: "500m"   
    limits:
      memory: "2Gi"  
      cpu: "1"     

---
# --- 4. Deployment do Prometheus Server ---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-deployment
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      serviceAccountName: prometheus-sa
      containers:
        - name: prometheus
          image: prom/prometheus:latest 
          args:
            - "--storage.tsdb.path=/prometheus/"
            - "--web.console.libraries=/usr/share/prometheus/console_libraries"
            - "--web.console.templates=/usr/share/prometheus/consoles"
            - "--web.enable-lifecycle"
          ports:
            - containerPort: 9090
          volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
            - name: storage-volume
              mountPath: /prometheus/
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
        - name: storage-volume
          persistentVolumeClaim:
            claimName: prometheus-pvc 

---
# --- 5. Service para expor o Prometheus internamente ---
apiVersion: v1
kind: Service
metadata:
  name: prometheus-service 
  labels:
    app: prometheus
spec:
  selector:
    app: prometheus 
  ports:
    - protocol: TCP
      port: 9090      
      targetPort: 9090  
  type: ClusterIP 