apiVersion: apps/v1
kind: Deployment
metadata:
  name: prefect-orion
  labels:
    app: prefect-orion
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prefect-orion
  template:
    metadata:
      labels:
        app: prefect-orion
    spec:
      containers:
      - name: prefect-orion
        image: pipedrive_metabase_integration-prefect-orion:latest 
        imagePullPolicy: Never 
        ports:
        - containerPort: 4200
          name: http 
        readinessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 15
          periodSeconds: 20
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        env:
        - name: APP_ROLE
          value: "orion"
        envFrom:
        - configMapRef:
            name: observability-config
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1.5"
---
apiVersion: v1
kind: Service
metadata:
  name: prefect-orion
spec:
  selector:
    app: prefect-orion
  ports:
  - protocol: TCP
    port: 4200
    targetPort: http 
  type: ClusterIP 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metrics
  labels:
    app: metrics
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metrics
  template:
    metadata:
      labels:
        app: metrics
      annotations: 
         prometheus.io/scrape: 'true'
         prometheus.io/port: '8082' 
         prometheus.io/path: '/metrics' 
    spec:
      containers:
      - name: metrics
        envFrom:
        - secretRef:
            name: app-secrets
        - secretRef:
            name: db-secrets
        image: pipedrive_metabase_integration-etl:latest 
        imagePullPolicy: Never
        ports:
        - containerPort: 8082
          name: metrics-port
        readinessProbe:
          httpGet:
            path: /metrics
            port: metrics-port
          initialDelaySeconds: 5
          periodSeconds: 15
        livenessProbe:
          tcpSocket: 
            port: metrics-port
          initialDelaySeconds: 30
          periodSeconds: 30
        resources:
          requests:
            memory: "64Mi"
            cpu: "50m"
          limits:
            memory: "128Mi"
            cpu: "100m"
        env:
          - name: APP_ROLE
            value: "metrics"
          - name: APP_METRICS_PORT 
            value: "8082"
---
apiVersion: v1
kind: Service
metadata:
  name: metrics
spec:
  selector:
    app: metrics
  ports:
  - protocol: TCP
    port: 8082
    targetPort: metrics-port 
  type: ClusterIP 
---
apiVersion: autoscaling/v2
kind: HorizontalPodAutoscaler
metadata:
  name: metrics-hpa
spec:
  scaleTargetRef:
    apiVersion: apps/v1
    kind: Deployment
    name: metrics
  minReplicas: 1
  maxReplicas: 3
  metrics:
  - type: Resource
    resource:
      name: cpu
      target:
        type: Utilization
        averageUtilization: 50
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine 
        ports:
        - containerPort: 6379
          name: redis-port 
        readinessProbe:
          tcpSocket:
            port: redis-port
          initialDelaySeconds: 5
          periodSeconds: 10
        livenessProbe:
          exec:
            command: ["redis-cli", "ping"] 
          initialDelaySeconds: 30
          periodSeconds: 30
          timeoutSeconds: 5
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "500m"
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  selector:
    app: redis
  ports:
  - protocol: TCP
    port: 6379
    targetPort: redis-port
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: db
  labels:
    app: db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: db
  template:
    metadata:
      labels:
        app: db
    spec:
      containers:
      - name: db
        image: postgres:14-alpine 
        ports:
        - containerPort: 5432
          name: pgsql 
        envFrom:
          - secretRef:
              name: db-secrets
        volumeMounts:
        - name: pgdata
          mountPath: /var/lib/postgresql/data
        readinessProbe:
          tcpSocket:
              port: pgsql 
          initialDelaySeconds: 10
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3
        livenessProbe:
          tcpSocket:
            port: pgsql 
          initialDelaySeconds: 60
          periodSeconds: 30
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "1.5Gi"
            cpu: "1.5"
      volumes:
      - name: pgdata
        persistentVolumeClaim:
          claimName: pgdata-pvc

---
apiVersion: v1
kind: Service
metadata:
  name: db
spec:
  selector:
    app: db
  ports:
  - protocol: TCP
    port: 5432
    targetPort: pgsql 
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana-oss:latest 
        ports:
        - containerPort: 3015
          name: http
        env:
        - name: GF_SERVER_HTTP_PORT
          value: "3015"
        readinessProbe:
          httpGet:
            path: /api/health
            port: http 
          initialDelaySeconds: 10
        livenessProbe:
          httpGet:
            path: /api/health
            port: http 
          initialDelaySeconds: 60 
          periodSeconds: 30
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "1Gi"
            cpu: "500m"

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  selector:
    app: grafana
  ports:
  - protocol: TCP
    port: 3015
    targetPort: http 
  type: ClusterIP 
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prefect-agent
  labels:
    app: prefect-agent
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prefect-agent
  template:
    metadata:
      labels:
        app: prefect-agent
    spec:
      containers:
      - name: agent
        image: pipedrive_metabase_integration-etl:latest
        imagePullPolicy: Never 
        command: ["prefect", "worker", "start", "--pool", "kubernetes-pool"]
        envFrom: 
        - secretRef:
            name: app-secrets
        - secretRef:
            name: db-secrets
        env:
          - name: PREFECT_API_URL
            value: "http://prefect-orion:4200/api"
        resources:
          requests:
            memory: "512Mi"
            cpu: "200m"
          limits:
            memory: "1Gi"
            cpu: "500m"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: metabase
  labels:
    app: metabase
spec:
  replicas: 1
  selector:
    matchLabels:
      app: metabase
  template:
    metadata:
      labels:
        app: metabase
    spec:
      containers:
      - name: metabase
        image: metabase/metabase:latest 
        imagePullPolicy: IfNotPresent
        ports:
        - containerPort: 3000
          name: http 
        readinessProbe:
          httpGet:
            path: /api/health # Endpoint de health do Metabase
            port: http
          initialDelaySeconds: 45 # Metabase pode demorar um pouco mais para carregar JVM/etc
          periodSeconds: 20
          timeoutSeconds: 10
          failureThreshold: 6 
        livenessProbe:
          httpGet:
            path: /api/health
            port: http
          initialDelaySeconds: 180
          periodSeconds: 30
          failureThreshold: 5
        resources:
          requests:
            memory: "1.5Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1.5" 
---
apiVersion: v1
kind: Service
metadata:
  name: metabase
spec:
  selector:
    app: metabase
  ports:
  - protocol: TCP
    port: 3000       
    targetPort: http 
  type: ClusterIP